name: Release new tag
on:
  workflow_dispatch:
    inputs:
      semver:
        description: "The SemVer value used by this release"
        type: string
        required: true

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false

permissions: "write-all"

jobs:
  release:
    name: Release Turbo Cache Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Branch sanity check
        if: github.ref != 'refs/heads/main'
        run: |
          echo "Releases should only run from the main branch"
          exit 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.11.1

      - name: Update version on Cargo.toml
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ github.event.inputs.semver }}\"/" Cargo.toml
          cat Cargo.toml

            
      - name: login to Docker
        uses: docker/login-action@v3
        with:
          username: brunojppb
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build Docker image
        env:
          CACHE_SERVER_VERSION: ${{ github.event.inputs.semver }}
        run: |
          docker pull --platform linux/arm64 brunojppb/turbo-cache-server:latest || true
          docker pull --platform linux/amd64 brunojppb/turbo-cache-server:latest || true
          docker buildx build --platform linux/arm64,linux/amd64 --tag brunojppb/turbo-cache-server-build:$CACHE_SERVER_VERSION --push --cache-to type=registry,ref=brunojppb/turbo-cache-server-build:release-cache --cache-from type=registry,ref=brunojppb/turbo-cache-server-build:latest . 
      
      - name: create temp containers to copy binaries from
        env:
          CACHE_SERVER_VERSION: ${{ github.event.inputs.semver }}
        run: |
          docker create --name dist_arm64 --platform arm64 brunojppb/turbo-cache-server-build:$CACHE_SERVER_VERSION
          docker create --name dist_x64 --platform amd64 brunojppb/turbo-cache-server-build:$CACHE_SERVER_VERSION

      - name: copy arm64 binary
        run: |
          docker cp dist_arm64:/usr/bin/decay action/decay-arm64
          chmod +x action/decay-arm64
      
      - name: copy x64 binary
        run: |
          docker cp dist_x64:/usr/bin/decay action/decay-x64
          chmod +x action/decay-x64

      - name: login to Github Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        env:
          CACHE_SERVER_VERSION: ${{ github.event.inputs.semver }}
        run: |
          docker buildx build --platform linux/arm64,linux/amd64 --tag ghcr.io/brunojppb/turbo-cache-server:$CACHE_SERVER_VERSION --tag ghcr.io/brunojppb/turbo-cache-server:latest --push .

      - name: Commit new binary
        env:
          CACHE_SERVER_VERSION: ${{ github.event.inputs.semver }}
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add action/decay-arm64
          git add action/decay-x64
          git commit -am "Release ${CACHE_SERVER_VERSION}"
          git tag -a ${CACHE_SERVER_VERSION} -m "Release ${CACHE_SERVER_VERSION}"

      - name: Push new tag
        env:
          CACHE_SERVER_VERSION: ${{ github.event.inputs.semver }}
        run: git push origin $CACHE_SERVER_VERSION
